oracle.url = jdbc:oracle:thin:@localhost:1521:XE
oracle.user = SYSTEM
oracle.password = 1


query.good = SELECT * FROM ProductData WHERE Id = ?
query.buyer = SELECT d3.buyer FROM ProductData JOIN (SELECT d1.id, d1.buyer, d1.price, d2.* FROM (SELECT id, buyer, product, price FROM DealJournal) d1 JOIN (SELECT product, max(price) as mx_price FROM DealJournal GROUP BY product) d2 ON d1.product = d2.product WHERE price = mx_price) d3 ON ProductData.id = d3.product WHERE ProductData.status = 'sold' and ProductData.id = ?
query.allGoods = SELECT * FROM ProductData WHERE Status = 'selling'
query.hotGoods = SELECT * FROM (SELECT * FROM ProductData ORDER BY bet_count DESC) WHERE ROWNUM <= 5 and status = 'selling'
query.categories = SELECT * FROM ProductCategory
query.categoryGoods = SELECT * FROM ProductData WHERE category = ? and status = 'selling'
query.sellingGoods = SELECT * FROM ProductData WHERE status = 'selling' AND seller = ?
query.soldGoods = SELECT * FROM ProductData WHERE status = 'sold' AND seller = ?
query.removedGoods = SELECT * FROM ProductData WHERE status = 'removed' AND seller = ?

query.user = SELECT * FROM UserData WHERE login = ?
query.allUsers = SELECT * FROM UserData
query.admins = SELECT * FROM UserData WHERE type = 'admin' 
query.moders = SELECT * FROM UserData WHERE type = 'moder'
query.users = SELECT * FROM UserData WHERE type = 'user'
query.onlineUsers = SELECT * FROM UserData WHERE online_status = '1'
query.offlineUsers = SELECT * FROM UserData WHERE online_status = '0'
query.blockedUsers = SELECT * FROM UserData WHERE blocking_status = '1' AND type = 'user'
query.notBlockedUsers = SELECT * FROM UserData WHERE blocking_status = '0' AND type = 'user'

query.trade = SELECT DealJournal.*, ProductData.name, ProductData.description, ProductData.price as final_price FROM DealJournal JOIN ProductData ON ProductData.id = DealJournal.product WHERE DealJournal.id = ?
query.allTrades = SELECT DealJournal.*, ProductData.name, ProductData.description, ProductData.price as final_price FROM DealJournal JOIN ProductData ON ProductData.id = DealJournal.product WHERE buyer = ?
query.successfulTrades = SELECT d3.*, ProductData.name, ProductData.description FROM ProductData JOIN (SELECT d1.*, d2.final_price FROM (SELECT * FROM DealJournal) d1 JOIN (SELECT product, max(price) as final_price FROM DealJournal GROUP BY product) d2 ON d1.product = d2.product WHERE Buyer = ? and price = final_price) d3 ON ProductData.id = d3.product
query.unsuccessfulTrades = SELECT d3.*, ProductData.name, ProductData.description FROM ProductData JOIN (SELECT d1.*, d2.final_price FROM (SELECT * FROM DealJournal) d1 JOIN (SELECT product, max(price) as final_price FROM DealJournal GROUP BY product) d2 ON d1.product = d2.product WHERE Buyer = ? and price <> final_price) d3 ON ProductData.id = d3.product
query.winningTrades = SELECT d3.id FROM ProductData JOIN (SELECT d1.*, d2.final_price FROM (SELECT * FROM DealJournal) d1 JOIN (SELECT product, max(price) as final_price FROM DealJournal GROUP BY product) d2 ON d1.product = d2.product WHERE Buyer = ? and price = final_price) d3 ON ProductData.id = d3.product WHERE ProductData.status = 'selling'
query.winnedTrades = SELECT d3.id FROM ProductData JOIN (SELECT d1.*, d2.final_price FROM (SELECT * FROM DealJournal) d1 JOIN (SELECT product, max(price) as final_price FROM DealJournal GROUP BY product) d2 ON d1.product = d2.product WHERE Buyer = ? and price = final_price) d3 ON ProductData.id = d3.product WHERE ProductData.status = 'sold'
query.losingTrades = SELECT d3.id FROM ProductData JOIN (SELECT d1.*, d2.final_price FROM (SELECT * FROM DealJournal) d1 JOIN (SELECT product, max(price) as final_price FROM DealJournal GROUP BY product) d2 ON d1.product = d2.product WHERE Buyer = ? and price <> final_price) d3 ON ProductData.id = d3.product WHERE ProductData.status = 'selling'
query.losedTrades = SELECT d3.id FROM ProductData JOIN (SELECT d1.*, d2.final_price FROM (SELECT * FROM DealJournal) d1 JOIN (SELECT product, max(price) as final_price FROM DealJournal GROUP BY product) d2 ON d1.product = d2.product WHERE Buyer = ? and price <> final_price) d3 ON ProductData.id = d3.product WHERE ProductData.status = 'sold'


query.raisePrice1 = UPDATE ProductData SET bet_count = bet_count + 1 WHERE id = ?
query.raisePrice2 = DELETE FROM DealJournal WHERE buyer = ? AND product = ?
query.raisePrice3 = INSERT INTO DealJournal(datetime,price,product,buyer) VALUES (SYSDATE, (SELECT price FROM ProductData WHERE id = ?), ?, ?)
query.raisePrice4 = UPDATE ProductData SET price = price + price_step WHERE id = ?
query.remove = UPDATE ProductData SET status = 'removed' WHERE id = ? AND status = 'selling'
query.setDescription = UPDATE ProductData SET description = ? WHERE id = ?
query.newGood = INSERT INTO ProductData(name, description, category, start_price, price, price_step, creating_date, selling_date, selling_interval, seller) VALUES (?, ?, ?, ?,?, (SELECT step FROM PriceStepSetting), SYSDATE, SYSDATE + (SELECT interv FROM SellingIntervalSetting),(SELECT interv FROM SellingIntervalSetting), ?)
query.newSettings1 = DELETE FROM PriceStepSetting
query.newSettings2 = INSERT INTO PriceStepSetting VALUES (?)
query.newSettings3 = DELETE FROM SellingIntervalSetting
query.newSettings4 = INSERT INTO SellingIntervalSetting VALUES (?)
query.priceStepSetting = SELECT step FROM PriceStepSetting
query.sellingInteervalSetting = SELECT interv FROM SellingIntervalSetting
query.setPriceStep = UPDATE ProductData SET price_step = ? WHERE id = ?
query.setSellingInterval1 = UPDATE ProductData SET selling_interval = ? WHERE id = ?
query.setSellingInterval4 = UPDATE ProductData SET selling_date = creating_date + selling_interval WHERE id = ?
query.setSellingInterval2 = UPDATE ProductData SET status = 'sold' WHERE bet_count <> 0 AND selling_date <= SYSDATE AND status = 'selling' AND id = ?
query.setSellingInterval3 = UPDATE ProductData SET status = 'removed' WHERE bet_count = 0 AND selling_date <= SYSDATE AND status = 'selling' AND id = ?


query.unblock = UPDATE UserData SET blocking_status = '0' WHERE login = ?
query.block1 = UPDATE UserData SET blocking_status = '1' WHERE login = ?
query.block2 = DELETE FROM DealJournal WHERE buyer = ? AND product IN (SELECT id FROM ProductData WHERE status = 'selling')
query.block3 = UPDATE ProductData SET status = 'removed' WHERE seller = ? AND status = 'selling'
query.newUser = INSERT INTO UserData(login, parole, type) VALUES (?, ?, ?)
query.setPassword = UPDATE UserData SET parole = ? WHERE login = ?
query.deleteUser1 = DELETE FROM DealJournal WHERE buyer = ?
query.deleteUser2 = DELETE FROM DealJournal WHERE product IN (SELECT id FROM ProductData WHERE seller = ? AND (status = 'selling' OR status = 'removed'))
query.deleteUser3 = DELETE FROM ProductData WHERE seller = ? AND (status = 'selling' OR status = 'removed')
query.deleteUser4 = UPDATE ProductData SET seller = NULL WHERE seller = ? AND status = 'sold'
query.deleteUser5 = DELETE FROM UserData WHERE login = ?
query.login = UPDATE UserData SET online_status = '1' WHERE login = ? AND blocking_status <> '1'
query.logout = UPDATE UserData SET online_status = '0' WHERE login = ?





